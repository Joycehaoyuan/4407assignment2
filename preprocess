#!/bin/bash

# Check the number of arguments
if [ $# -ne 1 ]; then
    echo "Usage: $0 input_file"
    exit 1
fi

input_file="$1"

# Create a temporary file for intermediate processing
TMPFILE=$(mktemp)

# 1. Convert to Unix line endings (remove Windows carriage returns)
# 2. Remove all non-ASCII characters
# 3. Replace semicolon separator with tab
# 4. Replace all commas with dots
cat "$input_file" \
    | tr -d '\r' \
    | tr -cd '\11\12\15\40-\176' \
    | sed 's/;/\t/g' \
    | sed 's/,/./g' > "$TMPFILE"

# 5. Use awk to fill in missing IDs and print to standard output
awk -F'\t' '
NR==1 {print; next} # Print header directly
{
    # Record the maximum ID
    if($1 ~ /^[0-9]+$/ && $1 > max_id) max_id = $1
    lines[NR]=$0
}
END {
    next_id = max_id + 1
    for(i=2; i<=NR; i++) {
        split(lines[i], f, "\t")
        # If ID is empty or not a number, fill it in
        if(f[1] == "" || f[1] !~ /^[0-9]+$/) f[1] = next_id++
        # Output
        for(j=1; j<=length(f); j++) {
            printf "%s%s", f[j], (j==length(f) ? "\n" : OFS)
        }
    }
}
' OFS='\t' "$TMPFILE"

# Delete the temporary file
rm "$TMPFILE"